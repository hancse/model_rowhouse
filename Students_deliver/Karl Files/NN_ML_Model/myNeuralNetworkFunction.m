function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 17-Sep-2019 17:08:45.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 6xQ matrix, input #1
% and returns:
%   y = 3xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-2.98697739969943;-1.78720645309673;-1.80695731602432;-1.78627062894049;-0.948722415091145;-0.962432592192833];
x1_step1.gain = [0.371380680107162;0.367085072167786;0.426433572530068;0.429415896288734;0.341352923066119;0.398690653264542];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.3458507800600840731;0.69728086773948882993;0.11340152621134942657;-1.3292363865998884087;-0.8482543132563797883;1.8344618135658765645;1.3367336743948663447;-0.59544144787502184535;0.77969555256933475995;-0.61728000944642480441];
IW1_1 = [-1.9466144497277093617 1.6462629539288471392 0.65217634005847124889 1.1991598813188955042 0.23439630812240339064 -0.51666950481241080695;-2.5802422577002563919 0.6555343661660796295 0.73810159791680451935 -0.6165518633777129498 0.41365889925890553247 -0.24662391861993243625;-1.1649995523985805512 -0.43735119229284902254 1.5048635798755194415 -0.42737720073899282403 1.0579596979920866673 -1.1520902265300867473;0.69566780925023374849 0.22934106532653583677 0.37854080385521043928 -1.5735675161443245518 -1.1102854389164247273 0.71579526752632915976;-0.46232658842033391711 0.39226750812457433781 -0.98706090473857532874 -0.53259962073325428644 0.60511954149104651979 -0.98033944507817150082;2.7837918789506566064 -0.082911400176523486483 -0.24181585401796709678 0.099964345373444979392 0.63591322877132183677 -1.4003647544187938223;1.3212353509840513155 -0.27908836195759051391 0.22658278918568661164 -1.0098278251209980017 0.11435261606581800797 -0.09267987345666264809;-1.6284533449665767879 -1.0385640909721962633 -0.31039243252181225596 1.5595171940679941613 -0.036871438516066917801 -0.61154527915923972969;2.997944656812822295 0.77656391471978603036 1.0947691726379931154 -0.26778112909984891354 0.58292870083725878416 -0.012655875777652078606;-2.9492901448500723482 -0.057964016244656933752 -0.39160598085294684445 0.40804249232323663854 -0.56512529675936995499 0.33221543273364534388];

% Layer 2
b2 = [-1.1856401298976215752;-0.016834410152181535775;-0.91993395521370058265];
LW2_1 = [-0.4110019030915386673 0.96977902665867832255 -1.0613480921931841561 -0.77640098930623446805 0.16448693023714738848 0.21463326977009128393 -1.0006312236446379682 0.68412195941824027745 -0.93498387166317931118 -2.0186074698484346435;-0.93599605678089137228 -0.27786869138256758971 -0.30611367446635684431 -0.57453070264941785705 0.45511868616734274529 -0.65671436026829865806 -1.2237227078971162353 0.11544577907879112477 0.16054391387627109378 0.46188353493651063131;-0.65786210835869451952 0.896126629188038204 -1.1382501015505412933 -0.92445676117416153428 0.28393771261861694422 0.042018981591415906218 -1.3295336714822856283 0.71121643552938640376 -0.89386457248342465753 -1.8971875001302545005];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.413503304928107;0.278876469848494;0.41535668766174];
y1_step1.xoffset = [-1.32363989031099;-0.704259436929661;-1.44023338748647];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
